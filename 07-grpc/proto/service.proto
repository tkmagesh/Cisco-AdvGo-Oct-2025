syntax = "proto3";

package proto;

option go_package = "/proto";

// data/message contracts
message AddRequest {
    int64 x = 1;
    int64 y = 2;
}

message AddResponse {
    int64 result = 1;
}

message PrimeRequest {
    int64 start = 1;
    int64 end = 2;
}

message PrimeResponse {
    int64 primeNo = 1;
}

message AggregateRequest {
    int64 no = 1;
}

message AggregateResponse {
    int64 min = 1;
    int64 max = 2;
    int64 count = 3;
    int64 sum = 4;
    int64 average = 5;
}

// / bidirectional streaming
message PersonName {
    string firstName=1;
    string lastName=2;
}

message GreetRequest {
    PersonName person = 1;
}

message GreetResponse {
    string message = 1;
}

// Service contract
service AppService {

    // Operation contracts
    // Request & Response
    rpc Add (AddRequest) returns (AddResponse);

    // Server Streaming
    rpc GeneratePrimes (PrimeRequest) returns (stream PrimeResponse);

    // Client Streaming
    rpc Aggregate (stream AggregateRequest) returns (AggregateResponse);

    // Bidirectional streaming
    rpc Greet (stream GreetRequest) returns (stream GreetResponse);
}


